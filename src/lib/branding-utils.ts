import { createClient } from '@supabase/supabase-js';

const supabase = createClient(
  process.env.NEXT_PUBLIC_SUPABASE_URL!,
  process.env.SUPABASE_SERVICE_ROLE_KEY!
);

export interface BrandingSettings {
  logo_url: string | null;
  primary_color: string;
  accent_color: string;
  footer_text: string | null;
}

export async function getUserBranding(userId: string): Promise<BrandingSettings> {
  try {
    const { data, error } = await supabase
      .from('users')
      .select('branding_settings, subscription_tier')
      .eq('id', userId)
      .single();

    if (error || !data) {
      return getDefaultBranding();
    }

    // Only return custom branding for Pro users
    if (data.subscription_tier !== 'pro' && data.subscription_tier !== 'lifetime') {
      return getDefaultBranding();
    }

    return data.branding_settings || getDefaultBranding();
  } catch (error) {
    console.error('Error fetching user branding:', error);
    return getDefaultBranding();
  }
}

export function getDefaultBranding(): BrandingSettings {
  return {
    logo_url: null,
    primary_color: '#4F46E5',
    accent_color: '#06B6D4',
    footer_text: null
  };
}

export function applyBrandingToHTML(html: string, branding: BrandingSettings, isPro: boolean): string {
  let brandedHTML = html;

  if (isPro) {
    // Apply custom colors
    brandedHTML = brandedHTML.replace(
      /#4F46E5/g, 
      branding.primary_color
    );
    brandedHTML = brandedHTML.replace(
      /#06B6D4/g, 
      branding.accent_color
    );

    // Add logo if available
    if (branding.logo_url) {
      const logoHTML = `<div style="text-align: center; margin-bottom: 20px;">
        <img src="${branding.logo_url}" alt="Logo" style="max-height: 60px; max-width: 200px;" />
      </div>`;
      brandedHTML = brandedHTML.replace(
        '<body>',
        `<body>${logoHTML}`
      );
    }

    // Replace footer text
    if (branding.footer_text) {
      brandedHTML = brandedHTML.replace(
        /Generated by TweetToCourse/g,
        branding.footer_text
      );
    }

    // Remove watermarks
    brandedHTML = brandedHTML.replace(
      /<div[^>]*class="watermark"[^>]*>.*?<\/div>/gs,
      ''
    );
  } else {
    // Add watermark for free users
    const watermark = `<div class="watermark" style="position: fixed; bottom: 10px; right: 10px; background: rgba(0,0,0,0.1); padding: 5px 10px; border-radius: 5px; font-size: 12px; color: #666;">
      Generated by TweetToCourse
    </div>`;
    brandedHTML = brandedHTML.replace('</body>', `${watermark}</body>`);
  }

  return brandedHTML;
}

export function getBrandedCSS(branding: BrandingSettings): string {
  return `
    :root {
      --primary-color: ${branding.primary_color};
      --accent-color: ${branding.accent_color};
    }
    
    .branded-primary {
      color: var(--primary-color) !important;
    }
    
    .branded-bg-primary {
      background-color: var(--primary-color) !important;
    }
    
    .branded-accent {
      color: var(--accent-color) !important;
    }
    
    .branded-bg-accent {
      background-color: var(--accent-color) !important;
    }
    
    .branded-border-primary {
      border-color: var(--primary-color) !important;
    }
  `;
}